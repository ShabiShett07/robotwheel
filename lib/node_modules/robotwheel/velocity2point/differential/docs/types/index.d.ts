/**
* Computes the final orientation of differential wheeled robots given wheel velocities of the robot.
*
* @param radius - radius of the wheel
* @param wheelbase - distance between two wheels
* @param x0 - initial x position in meters
* @param y0 - initial y position in meters
* @param psi0 - initial orientation in degrees
* @param wheel_velocity_1 - velocity of the first wheel
* @param wheel_velocity_2 - velocity of the second wheel
* @param time - time in seconds
* @throws first argument must be a positive integer
* @throws second argument must be a positive integer
* @returns final position
*
* @example
*
* var z = differential( 0.1, 0.4, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 1.0 );
* // z => <Float64Array>[ 0.5, 0.0, 0.0 ]
*/
declare function differential( radius: number, wheelbase: number, x0: number, y0: number, psi0: number, wheel_velocity_1: number, wheel_velocity_2: number, time: number ): Array<number>;


// EXPORTS //

export = differential;