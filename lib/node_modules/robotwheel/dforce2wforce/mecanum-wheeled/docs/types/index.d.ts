/**
* Computes the resultant forces of omnidirectional wheeled robots given the applied wheel forces.
*
* @param wheelbase - distance between the left and right wheels (meters)
* @param trackwidth - distance between the front and rear wheels (meters)
* @param f1 - applied force on wheel 1 (Newton)
* @param f2 - applied force on wheel 2 (Newton)
* @param f3 - applied force on wheel 3 (Newton)
* @param f4 - applied force on wheel 4 (Newton)
* @throws first argument must be a positive integer
* @throws second argument must be a positive integer
* @returns resultant forces
*
* @example
*
* var sqrt = require( '@stdlib/math/base/special/sqrt' );
*
* var z = mecanum_wheeled( 5.0, 5.0, 5.0 * sqrt( 2.0 ), 5.0 * sqrt( 2.0 ), 5.0 * sqrt( 2.0 ), 5.0 * sqrt( 2.0 ) );
* // z => <Float64Array>[ 20.0, 0.0, 0.0 ]
*/
declare function mecanum_wheeled( wheelbase: number, trackwidth: number, f1: number, f2: number, f3: number, f4: number ): Array<number>;


// EXPORTS //

export = mecanum_wheeled;